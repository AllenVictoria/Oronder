name: Create Module Files For GitHub Release
env:
  project_url: "https://github.com/${{github.repository}}"
  latest_manifest_url: "https://github.com/${{github.repository}}/releases/latest/download/module.json"
  release_module_url: "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name || github.ref_name}}/module.zip"

on:
  release:
    types: [published]
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Version From Tag
        id: get_version
        uses: battila7/get-version-action@v2.3.0

      - name: Modify Module Manifest With Release-Specific Values
        id: sub_manifest_link_version
        uses: cschleiden/replace-tokens@v1.2
        with:
          files: 'module.json'
        env:
          VERSION: ${{steps.get_version.outputs.version-without-v}}
          URL: ${{ env.project_url }}
          MANIFEST: ${{ env.latest_manifest_url }}
          DOWNLOAD: ${{ env.release_module_url }}

      - name: Downloading Dependencies
        run: npm install

      - name: Build
        run: npm run build
        
      - name: Create Module Archive
        run: |
          zip                    \
            --recurse-paths      \
            ./module.zip         \
            module.json          \
            README.md            \
            LICENSE              \
            templates            \
            dist/                \
            styles/              \
            packs/               \
            languages/

      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './module.json, ./module.zip'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      - name: Set module.json path
        id: set_module_json_path
        run: echo "::set-output name=module_json_path::$(find . -name 'module.json')"

      - name: Update Foundry VTT Module Repo
        run: python .github/workflows/foundry_release.py
        env:
          FOUNDRY_PACKAGE_RELEASE_TOKEN: ${{ secrets.FOUNDRY_PACKAGE_RELEASE_TOKEN }}
          MODULE_JSON_PATH: ${{ steps.set_module_json_path.outputs.module_json_path }}
          MODULE_JSON_PATHZ: ${{ steps.create_version_release.outputs.artifacts_folder }}/module.json
